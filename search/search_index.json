{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"android-vs-ios/","text":"What is the single best argument for getting an iPhone instead of an Android? Since there are so many technical and user experience answers, let me pull a funny one here. Android is like your girlfriend. You have a wide variety of choices in color, size, specifications and of course the cost which suits your pocket. You can customize it as you wish. So much of like able glitter at the start and as days pass by the response is slower. You can tear it down if you are an expert and put it back (if it doesn't allow can move on cheaply). With great freedom comes a greater insecurity. IPhone is like your wife. It controls you in every aspect. No customizations Comes with a heavy price but lasts longer, much longer. You have to be too good to tear it down be given the cost you mostly won't if it is yours. Great control results in greater security. So, it all depends on what stage of life you are and what you expect from your phone. Having a girlfriend makes sense when you're young but tying the knot makes more sense as you grow older and this is from my personal experience.","title":"What is the single best argument for getting an iPhone instead of an Android?"},{"location":"android-vs-ios/#what-is-the-single-best-argument-for-getting-an-iphone-instead-of-an-android","text":"Since there are so many technical and user experience answers, let me pull a funny one here.","title":"What is the single best argument for getting an iPhone instead of an Android?"},{"location":"android-vs-ios/#android-is-like-your-girlfriend","text":"You have a wide variety of choices in color, size, specifications and of course the cost which suits your pocket. You can customize it as you wish. So much of like able glitter at the start and as days pass by the response is slower. You can tear it down if you are an expert and put it back (if it doesn't allow can move on cheaply). With great freedom comes a greater insecurity.","title":"Android is like your girlfriend."},{"location":"android-vs-ios/#iphone-is-like-your-wife","text":"It controls you in every aspect. No customizations Comes with a heavy price but lasts longer, much longer. You have to be too good to tear it down be given the cost you mostly won't if it is yours. Great control results in greater security. So, it all depends on what stage of life you are and what you expect from your phone. Having a girlfriend makes sense when you're young but tying the knot makes more sense as you grow older and this is from my personal experience.","title":"IPhone is like your wife."},{"location":"code-reviews/","text":"Code Reviews Code reviews are about getting the changes that you have made to the code reviewed by another programmer. They are an iterative process that involves suggesting edits, reviewing the edits, making changes. Code Review Culture Feedback skills. Developers are open-minded, curious, and willing to learn from their peers. Code is personal, there is always person behind it. The review process should not hold up development. You can work on another branch while waiting for the review. This implies that developers are comfortable with working on multiple branches in parallel. Preparing code for Reviews The fewer the changes, the quicker the reviewer can get to it. Contrastingly, too many small Pull Requests may cause too much context switching. Always err on the side of fewer changes. Check the name of the branch Make sure to push the changes Performing a Review Use git fetch or get new branches. Obtain a local copy of the code Diff the local branch with the remote branch Install all the relevant dependencies Run the tests and see if they pass Test the code manually On a separate screen, open the code on GitHub. Post Reviews Delete the branch when finished Todo What are some things to look for in a code review? What is the size and impact of the change?","title":"Code Reviews"},{"location":"code-reviews/#code-reviews","text":"Code reviews are about getting the changes that you have made to the code reviewed by another programmer. They are an iterative process that involves suggesting edits, reviewing the edits, making changes.","title":"Code Reviews"},{"location":"code-reviews/#code-review-culture","text":"Feedback skills. Developers are open-minded, curious, and willing to learn from their peers. Code is personal, there is always person behind it. The review process should not hold up development. You can work on another branch while waiting for the review. This implies that developers are comfortable with working on multiple branches in parallel.","title":"Code Review Culture"},{"location":"code-reviews/#preparing-code-for-reviews","text":"The fewer the changes, the quicker the reviewer can get to it. Contrastingly, too many small Pull Requests may cause too much context switching. Always err on the side of fewer changes. Check the name of the branch Make sure to push the changes","title":"Preparing code for Reviews"},{"location":"code-reviews/#performing-a-review","text":"Use git fetch or get new branches. Obtain a local copy of the code Diff the local branch with the remote branch Install all the relevant dependencies Run the tests and see if they pass Test the code manually On a separate screen, open the code on GitHub.","title":"Performing a Review"},{"location":"code-reviews/#post-reviews","text":"Delete the branch when finished Todo What are some things to look for in a code review? What is the size and impact of the change?","title":"Post Reviews"},{"location":"license/","text":"MkDocs License (BSD) Copyright \u00a9 2014, Tom Christie. All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. Theme: Material for MkDocs MIT License Copyright \u00a9 2016 - 2017 Martin Donath Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"license/#mkdocs-license-bsd","text":"Copyright \u00a9 2014, Tom Christie. All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"MkDocs License (BSD)"},{"location":"license/#theme-material-for-mkdocs","text":"MIT License Copyright \u00a9 2016 - 2017 Martin Donath Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Theme: Material for MkDocs"},{"location":"perspective/","text":"Mathematical Techniques vs Physics Techniques John von Neumann was a great mathematician and a great physicist. So someone challenged him with this problem: Two trains are 100 meters apart, moving towards each other. Each train is moving at 10 meters per second. A bee is flying back and forth between those two trains at 20 meters per second. Eventually the bee will be squished when the two trains crash against each other. When they do, what will be the total distance flown by the bee? According to legend, von Neumann thought for a moment, and then said \"100 meters\". The questioner said, \"Correct. But now I know, from the quickness of your response, that you are really a physicist, not a mathematician. The mathematician would have calculated when each bee-train encounter takes place, calculated the position, taken the sum of those distances as an infinite series, and then summed the series. But a physicist would have taken a short-cut; the physicists would have realized that the bee was flying for 5 seconds at 20 meters per second, so it would have traveled 100 meters total.\" Von Neumann's purported response: \"Oh, that's a clever way to solve it! No, I summed the series.\"","title":"Mathematical Techniques vs Physics Techniques"},{"location":"perspective/#mathematical-techniques-vs-physics-techniques","text":"John von Neumann was a great mathematician and a great physicist. So someone challenged him with this problem: Two trains are 100 meters apart, moving towards each other. Each train is moving at 10 meters per second. A bee is flying back and forth between those two trains at 20 meters per second. Eventually the bee will be squished when the two trains crash against each other. When they do, what will be the total distance flown by the bee? According to legend, von Neumann thought for a moment, and then said \"100 meters\". The questioner said, \"Correct. But now I know, from the quickness of your response, that you are really a physicist, not a mathematician. The mathematician would have calculated when each bee-train encounter takes place, calculated the position, taken the sum of those distances as an infinite series, and then summed the series. But a physicist would have taken a short-cut; the physicists would have realized that the bee was flying for 5 seconds at 20 meters per second, so it would have traveled 100 meters total.\" Von Neumann's purported response: \"Oh, that's a clever way to solve it! No, I summed the series.\"","title":"Mathematical Techniques vs Physics Techniques"},{"location":"presentation-advice/","text":"Presentation advice The Takeaway: When you are giving a presentation, only two questions matter: Who is my audience? If there is one thing that I want people to take away from the talk, what is it? Not what you want to say, its what others want to here Speak with the whole body: use hand gestures, facial expressions, Research Talks A research talk is just too short to be able to give a sensible development on the blackboard, and 35mm slides take far too much preparation. Preparation: Don't prepare slides till a day before. Instead, make sure that you understand the material Road Map: \"This is what I have discussed so far, and now I'm going on to cover these areas'' Balance the Material: The tension is this: you need to say enough to convey the essential content of your idea, but you must not overwhelm your audience with too much material.The best way out of this dilemma is to adopt a non-uniform approach to your talk; that is, treat some aspects in more detail than others. Be Motivating: The Awful Trap is to present only the framework and the abstraction, leaving out the motivating examples which you used to guide your work. It is utterly vital to present examples which demonstrate the points you are trying to make. Slides: Six or seven \"things\" on one slide is quite enough. Slides shouldn't repeat what you plan to say, but they should emphasize it; don't waste visual bandwidth on things you are also going to say. The Jitters: Do try steady, deep breathing beforehand, and relaxation exercises, but don't expect to feel calm. Ordered Identify the problem that we are solving. Explain it as clearly as possible Compare it to other things if you have to to get that point across Talk about the side effects of what we have. How we can focus our shift in time Relate it to the vision Goal: don\u2019t tell the room what you did, tell the room the most important things they should know, but probably do not Goal: put smart people in the best position to help you Sources http://research.microsoft.com/en-us/um/people/simonpj/papers/giving-a-talk/giving-a-talk-html.html Book: http://www.amazon.ca/Making-Sense-Students-Research-Writing/dp/0195445813","title":"Presentation advice"},{"location":"presentation-advice/#presentation-advice","text":"The Takeaway: When you are giving a presentation, only two questions matter: Who is my audience? If there is one thing that I want people to take away from the talk, what is it? Not what you want to say, its what others want to here Speak with the whole body: use hand gestures, facial expressions, Research Talks A research talk is just too short to be able to give a sensible development on the blackboard, and 35mm slides take far too much preparation. Preparation: Don't prepare slides till a day before. Instead, make sure that you understand the material Road Map: \"This is what I have discussed so far, and now I'm going on to cover these areas'' Balance the Material: The tension is this: you need to say enough to convey the essential content of your idea, but you must not overwhelm your audience with too much material.The best way out of this dilemma is to adopt a non-uniform approach to your talk; that is, treat some aspects in more detail than others. Be Motivating: The Awful Trap is to present only the framework and the abstraction, leaving out the motivating examples which you used to guide your work. It is utterly vital to present examples which demonstrate the points you are trying to make. Slides: Six or seven \"things\" on one slide is quite enough. Slides shouldn't repeat what you plan to say, but they should emphasize it; don't waste visual bandwidth on things you are also going to say. The Jitters: Do try steady, deep breathing beforehand, and relaxation exercises, but don't expect to feel calm.","title":"Presentation advice"},{"location":"presentation-advice/#ordered","text":"Identify the problem that we are solving. Explain it as clearly as possible Compare it to other things if you have to to get that point across Talk about the side effects of what we have. How we can focus our shift in time Relate it to the vision Goal: don\u2019t tell the room what you did, tell the room the most important things they should know, but probably do not Goal: put smart people in the best position to help you","title":"Ordered"},{"location":"presentation-advice/#sources","text":"http://research.microsoft.com/en-us/um/people/simonpj/papers/giving-a-talk/giving-a-talk-html.html Book: http://www.amazon.ca/Making-Sense-Students-Research-Writing/dp/0195445813","title":"Sources"},{"location":"procrastination/","text":"Procrastination Do not procrastinate. It is not as fancy as it looks earlier. Most of the college students or in fact, a whole lot of people in the world like to procrastinate. When you come to a college, you yourself are responsible for your actions, and this is when the concept of procrastination is seeded. You have a lot of distractions, friends to get drunk with, movies to watch, football games to play, girlfriends to date, and before you know, studies become your last priority, and you start being inspired from the misinterpreted quotes like, \"Live life to the fullest, live in the present, don't worry about the future. Time flies and soon you are walking home with the degree. Life needs to be lived on a different pattern now, and by the time you understand this, you have had paid a price for the habit. The old habit dies hard, but if you are lucky enough, you flex fast and get away after paying a small price. A lot others, it costs more, and another chunk just keeps paying the price. They keep missing the real life deadline, just because they kept sticking to a seemingly cool habit. The whole process of adjusting and readjusting is very painful and strenuous, costs up to different extents and in \"real\" life, gives you big dents, and always leaves you wondering, \"I wish I had started earlier, this would have been lot easier then.\" Sources What is some advice that most college students are not ever likely to hear? - Quora","title":"Procrastination"},{"location":"procrastination/#procrastination","text":"Do not procrastinate. It is not as fancy as it looks earlier. Most of the college students or in fact, a whole lot of people in the world like to procrastinate. When you come to a college, you yourself are responsible for your actions, and this is when the concept of procrastination is seeded. You have a lot of distractions, friends to get drunk with, movies to watch, football games to play, girlfriends to date, and before you know, studies become your last priority, and you start being inspired from the misinterpreted quotes like, \"Live life to the fullest, live in the present, don't worry about the future. Time flies and soon you are walking home with the degree. Life needs to be lived on a different pattern now, and by the time you understand this, you have had paid a price for the habit. The old habit dies hard, but if you are lucky enough, you flex fast and get away after paying a small price. A lot others, it costs more, and another chunk just keeps paying the price. They keep missing the real life deadline, just because they kept sticking to a seemingly cool habit. The whole process of adjusting and readjusting is very painful and strenuous, costs up to different extents and in \"real\" life, gives you big dents, and always leaves you wondering, \"I wish I had started earlier, this would have been lot easier then.\"","title":"Procrastination"},{"location":"procrastination/#sources","text":"What is some advice that most college students are not ever likely to hear? - Quora","title":"Sources"},{"location":"quotes/","text":"Quotes \u201cNo idea is above scrutiny and no people are beneath dignity.\u201d \u2015 Maajid Nawaz \u201cIn the midst of winter, I found there was, within me, an invincible summer. And that makes me happy. For it says that no matter how hard the world pushes against me, within me, there\u2019s something stronger \u2013 something better, pushing right back.\u201d \u2015 Albert Camus \u201cIt is not the critic who counts; not the man who points out how the strong man stumbles, or where the doer of deeds could have done them better. The credit belongs to the man who is actually in the arena, whose face is marred by dust and sweat and blood; who strives valiantly; who errs, who comes short again and again, because there is no effort without error and shortcoming; but who does actually strive to do the deeds; who knows great enthusiasms, the great devotions; who spends himself in a worthy cause; who at the best knows in the end the triumph of high achievement, and who at the worst, if he fails, at least fails while daring greatly, so that his place shall never be with those cold and timid souls who neither know victory nor defeat.\u201d \u2015 Theodore Roosevelt \"Turning pro is a mindset. If we are struggling with fear, self-sabotage, procrastination, self-doubt, etc., the problem is, we\u2019re thinking like amateurs. Amateurs don't show up. Amateurs crap out. Amateurs let adversity defeat them. The pro thinks differently. He shows up, he does his work, he keeps on truckin\u2019, no matter what.\" \u2015 Steven Pressfield Programmer Quotes \"We who cut mere stones must always be envisioning cathedrals\" \u2015 Quarry Worker\u2019s Creed \"Computer science education cannot make anybody an expert programmer any more than studying brushes and pigment can make somebody an expert painter\u201d \u2015 Eric Raymond If you are not holding back some energy in reserve, if you don\u2019t have a new plan, if you aren\u2019t going to change your behavior, and if you are reasonably confident in your original estimate, then promising to try is fundamentally dishonest. You are lying. And you are probably doing it to save face and to avoid a confrontation \u2015 Bob Martin","title":"Quotes"},{"location":"quotes/#quotes","text":"\u201cNo idea is above scrutiny and no people are beneath dignity.\u201d \u2015 Maajid Nawaz \u201cIn the midst of winter, I found there was, within me, an invincible summer. And that makes me happy. For it says that no matter how hard the world pushes against me, within me, there\u2019s something stronger \u2013 something better, pushing right back.\u201d \u2015 Albert Camus \u201cIt is not the critic who counts; not the man who points out how the strong man stumbles, or where the doer of deeds could have done them better. The credit belongs to the man who is actually in the arena, whose face is marred by dust and sweat and blood; who strives valiantly; who errs, who comes short again and again, because there is no effort without error and shortcoming; but who does actually strive to do the deeds; who knows great enthusiasms, the great devotions; who spends himself in a worthy cause; who at the best knows in the end the triumph of high achievement, and who at the worst, if he fails, at least fails while daring greatly, so that his place shall never be with those cold and timid souls who neither know victory nor defeat.\u201d \u2015 Theodore Roosevelt \"Turning pro is a mindset. If we are struggling with fear, self-sabotage, procrastination, self-doubt, etc., the problem is, we\u2019re thinking like amateurs. Amateurs don't show up. Amateurs crap out. Amateurs let adversity defeat them. The pro thinks differently. He shows up, he does his work, he keeps on truckin\u2019, no matter what.\" \u2015 Steven Pressfield","title":"Quotes"},{"location":"quotes/#programmer-quotes","text":"\"We who cut mere stones must always be envisioning cathedrals\" \u2015 Quarry Worker\u2019s Creed \"Computer science education cannot make anybody an expert programmer any more than studying brushes and pigment can make somebody an expert painter\u201d \u2015 Eric Raymond If you are not holding back some energy in reserve, if you don\u2019t have a new plan, if you aren\u2019t going to change your behavior, and if you are reasonably confident in your original estimate, then promising to try is fundamentally dishonest. You are lying. And you are probably doing it to save face and to avoid a confrontation \u2015 Bob Martin","title":"Programmer Quotes"},{"location":"truths/","text":"Hard Truths Why should I, as an employer looking for software developers, care about what grade you got in European History? After all, history is boring. Oh, so, you\u2019re saying I should hire you because you don\u2019t work very hard when the work is boring? Well, there\u2019s boring stuff in programming, too. Every job has its boring moments. And I don\u2019t want to hire people that only want to do the fun stuff. I used to be able to tell the smart kids because they could rip through a recursive algorithm in seconds, or implement linked-list manipulation functions using pointers as fast as they could write on the whiteboard. But with a JavaSchool Grad, I can\u2019t tell if they\u2019re struggling with these problems because they are undereducated or if they\u2019re struggling with these problems because they don\u2019t actually have that special part of the brain that they\u2019re going to need to do great programming work. If the basic concepts aren\u2019t so easy that you don\u2019t even have to think about them, you\u2019re not going to get the big concepts. Still, I don\u2019t really care. I want my ER doctor to understand anatomy, even if all she has to do is put the computerized defibrillator nodes on my chest and push the big red button, and I want programmers to know programming down to the CPU level, even if Ruby on Rails does read your mind and build a complete Web 2.0 social collaborative networking site for you with three clicks of the mouse. Why should I, as an employer looking for software developers, care about what grade you got in European History? After all, history is boring. Oh, so, you\u2019re saying I should hire you because you don\u2019t work very hard when the work is boring? Well, there\u2019s boring stuff in programming, too. Every job has its boring moments. And I don\u2019t want to hire people that only want to do the fun stuff. The difference between a tolerable programmer and a great programmer is not how many programming languages they know, and it\u2019s not whether they prefer Python or Java. It\u2019s whether they can communicate their ideas. By persuading other people, they get leverage. By writing clear comments and technical specs, they let other programmers understand their code, which means other programmers can use and work with their code instead of rewriting it. Absent this, their code is worthless. By writing clear technical documentation for end users, they allow people to figure out what their code is supposed to do, which is the only way those users can see the value in their code. There\u2019s a lot of wonderful, useful code buried on sourceforge somewhere that nobody uses because it was created by programmers who don\u2019t write very well (or don\u2019t write at all), and so nobody knows what they\u2019ve done and their brilliant code languishes. Incrementalism You have to move forward a little bit, every day. It doesn\u2019t matter if your code is lame and buggy and nobody wants it. If you are moving forward, writing code and fixing bugs constantly, time is on your side. Watch out when your competition fires at you. The Duck tape Programmer Execution trumps planning \u201cYeah,\u201d he says, \u201cAt the end of the day, ship the fucking thing! It\u2019s great to rewrite your code and make it cleaner and by the third time it\u2019ll actually be pretty. But that\u2019s not the point\u2014you\u2019re not here to write code; you\u2019re here to ship products.\u201d","title":"Hard Truths"},{"location":"truths/#hard-truths","text":"Why should I, as an employer looking for software developers, care about what grade you got in European History? After all, history is boring. Oh, so, you\u2019re saying I should hire you because you don\u2019t work very hard when the work is boring? Well, there\u2019s boring stuff in programming, too. Every job has its boring moments. And I don\u2019t want to hire people that only want to do the fun stuff. I used to be able to tell the smart kids because they could rip through a recursive algorithm in seconds, or implement linked-list manipulation functions using pointers as fast as they could write on the whiteboard. But with a JavaSchool Grad, I can\u2019t tell if they\u2019re struggling with these problems because they are undereducated or if they\u2019re struggling with these problems because they don\u2019t actually have that special part of the brain that they\u2019re going to need to do great programming work. If the basic concepts aren\u2019t so easy that you don\u2019t even have to think about them, you\u2019re not going to get the big concepts. Still, I don\u2019t really care. I want my ER doctor to understand anatomy, even if all she has to do is put the computerized defibrillator nodes on my chest and push the big red button, and I want programmers to know programming down to the CPU level, even if Ruby on Rails does read your mind and build a complete Web 2.0 social collaborative networking site for you with three clicks of the mouse. Why should I, as an employer looking for software developers, care about what grade you got in European History? After all, history is boring. Oh, so, you\u2019re saying I should hire you because you don\u2019t work very hard when the work is boring? Well, there\u2019s boring stuff in programming, too. Every job has its boring moments. And I don\u2019t want to hire people that only want to do the fun stuff. The difference between a tolerable programmer and a great programmer is not how many programming languages they know, and it\u2019s not whether they prefer Python or Java. It\u2019s whether they can communicate their ideas. By persuading other people, they get leverage. By writing clear comments and technical specs, they let other programmers understand their code, which means other programmers can use and work with their code instead of rewriting it. Absent this, their code is worthless. By writing clear technical documentation for end users, they allow people to figure out what their code is supposed to do, which is the only way those users can see the value in their code. There\u2019s a lot of wonderful, useful code buried on sourceforge somewhere that nobody uses because it was created by programmers who don\u2019t write very well (or don\u2019t write at all), and so nobody knows what they\u2019ve done and their brilliant code languishes.","title":"Hard Truths"},{"location":"truths/#incrementalism","text":"You have to move forward a little bit, every day. It doesn\u2019t matter if your code is lame and buggy and nobody wants it. If you are moving forward, writing code and fixing bugs constantly, time is on your side. Watch out when your competition fires at you.","title":"Incrementalism"},{"location":"truths/#the-duck-tape-programmer","text":"Execution trumps planning \u201cYeah,\u201d he says, \u201cAt the end of the day, ship the fucking thing! It\u2019s great to rewrite your code and make it cleaner and by the third time it\u2019ll actually be pretty. But that\u2019s not the point\u2014you\u2019re not here to write code; you\u2019re here to ship products.\u201d","title":"The Duck tape Programmer"},{"location":"Computer Science/Programing Languages/bash/","text":"Useful Bash commands What is running on my port? use lsof -i :3000 to find out what is on port 3000","title":"Useful Bash commands"},{"location":"Computer Science/Programing Languages/bash/#useful-bash-commands","text":"What is running on my port? use lsof -i :3000 to find out what is on port 3000","title":"Useful Bash commands"},{"location":"Computer Science/Programing Languages/python/","text":"Python Built in tools Iterators Yeild From One function can yield the result of another function. def search_folders ( folder , text ): # for macOS if .DS_Store error # glob.glob(os.path.join(folder, * )) items = os . listdir ( folder ) for item in items : full_item = os . path . join ( folder , item ) if os . path . isdir ( full_item ): yield from search_folders ( full_item , text ) else : yield from search_file ( full_item , text ) def search_file ( filename , search_text ): # matches = [] with open ( filename , r , encoding = utf-8 ) as fin : line_num = 0 for line in fin : line_num += 1 if line . lower () . find ( search_text ) = 0 : m = SearchResult ( line = line_num , file = filename , text = line ) yield m Boiler Plate Transfer a file import requests url = https://us-central1-datascience-181217.cloudfunctions.net/example response = requests . post ( url , files = { file : open ( drum.wav , rb )}) print ( response . status_code ) req = response . request print ( help ( req ))","title":"Python"},{"location":"Computer Science/Programing Languages/python/#python","text":"","title":"Python"},{"location":"Computer Science/Programing Languages/python/#built-in-tools","text":"","title":"Built in tools"},{"location":"Computer Science/Programing Languages/python/#iterators","text":"","title":"Iterators"},{"location":"Computer Science/Programing Languages/python/#yeild-from","text":"One function can yield the result of another function. def search_folders ( folder , text ): # for macOS if .DS_Store error # glob.glob(os.path.join(folder, * )) items = os . listdir ( folder ) for item in items : full_item = os . path . join ( folder , item ) if os . path . isdir ( full_item ): yield from search_folders ( full_item , text ) else : yield from search_file ( full_item , text ) def search_file ( filename , search_text ): # matches = [] with open ( filename , r , encoding = utf-8 ) as fin : line_num = 0 for line in fin : line_num += 1 if line . lower () . find ( search_text ) = 0 : m = SearchResult ( line = line_num , file = filename , text = line ) yield m","title":"Yeild From"},{"location":"Computer Science/Programing Languages/python/#boiler-plate","text":"","title":"Boiler Plate"},{"location":"Computer Science/Programing Languages/python/#transfer-a-file","text":"import requests url = https://us-central1-datascience-181217.cloudfunctions.net/example response = requests . post ( url , files = { file : open ( drum.wav , rb )}) print ( response . status_code ) req = response . request print ( help ( req ))","title":"Transfer a file"},{"location":"Computer Science/SRE/SRE/","text":"Site Reliability and Google Cloud stuff to learn know how to navigate to and read Beehive dashboard charts in Stackdriver how to get to and interpret structured logs in Stackdriver (including events types) how to read Stackdriver tracing charts know how to rollback and roll forward release changes know how to read and search through Stackdriver logs based on examples from past scenarios know how to restart Kubernetes nodes if it doesn't automatically restart and monitor it as it comes back online. know if Kubernetes nodes are not auto-scaling, or scaling too quickly Navigating Stack-driver Logging How: To get to the Logging page, click on the Logs section in the sidebar burger menu Can filter between stuff Why: Stack-driver provides structured logging. All log entries are in json format so that it is easy to search","title":"Site Reliability and Google Cloud stuff to learn"},{"location":"Computer Science/SRE/SRE/#site-reliability-and-google-cloud-stuff-to-learn","text":"know how to navigate to and read Beehive dashboard charts in Stackdriver how to get to and interpret structured logs in Stackdriver (including events types) how to read Stackdriver tracing charts know how to rollback and roll forward release changes know how to read and search through Stackdriver logs based on examples from past scenarios know how to restart Kubernetes nodes if it doesn't automatically restart and monitor it as it comes back online. know if Kubernetes nodes are not auto-scaling, or scaling too quickly","title":"Site Reliability and Google Cloud stuff to learn"},{"location":"Computer Science/SRE/SRE/#navigating-stack-driver-logging","text":"How: To get to the Logging page, click on the Logs section in the sidebar burger menu Can filter between stuff Why: Stack-driver provides structured logging. All log entries are in json format so that it is easy to search","title":"Navigating Stack-driver Logging"},{"location":"Computer Science/SRE/gcp/","text":"Google Cloud platform Back in the day scaling meant that we go to the store, buy a new computer and spend a day setting it up. The larger companies would have to buy a larger number of computers so they could purchase them for cheaper. Larger companies started renting out servers and related services for limited time to smaller companies.These related services is what we refer to as the cloud . There are three types of services that were provided: Infrastructure Platform Software Sources An introduction to GCP for students","title":"Google Cloud platform"},{"location":"Computer Science/SRE/gcp/#google-cloud-platform","text":"Back in the day scaling meant that we go to the store, buy a new computer and spend a day setting it up. The larger companies would have to buy a larger number of computers so they could purchase them for cheaper. Larger companies started renting out servers and related services for limited time to smaller companies.These related services is what we refer to as the cloud . There are three types of services that were provided: Infrastructure Platform Software","title":"Google Cloud platform"},{"location":"Computer Science/SRE/gcp/#sources","text":"An introduction to GCP for students","title":"Sources"},{"location":"Computer Science/SRE/k8/","text":"Kubernetes EDx Notes","title":"Kubernetes"},{"location":"Computer Science/SRE/k8/#kubernetes","text":"EDx Notes","title":"Kubernetes"},{"location":"Computer Science/Software Development/agile-manifesto/","text":"Agile Manifesto We want to restore a balance. We embrace modeling, but not in order to file some diagram in a dusty corporate repository. We embrace documentation, but not hundreds of pages of never-maintained and rarely-used tomes. We plan, but recognize the limits of planning in a turbulent environment. Jim Highsmith, History: The Agile Manifesto Principles","title":"Agile Manifesto"},{"location":"Computer Science/Software Development/agile-manifesto/#agile-manifesto","text":"We want to restore a balance. We embrace modeling, but not in order to file some diagram in a dusty corporate repository. We embrace documentation, but not hundreds of pages of never-maintained and rarely-used tomes. We plan, but recognize the limits of planning in a turbulent environment. Jim Highsmith, History: The Agile Manifesto","title":"Agile Manifesto"},{"location":"Computer Science/Software Development/agile-manifesto/#principles","text":"","title":"Principles"},{"location":"Computer Science/Software Development/functions18Serverless/","text":"Function18 Conference History of serverless Speaker: Keith Horwood (CEO of Stdlib) LAMP stack was how most people got started in Web programming FB used php extensively One script, one end-point This was not very scalable DHH launched rails - Twitter used rails extensively AWS in 2006 for virtualization to increase scalability Shift from IT personal to DevOps (infrastructure and hardware) DevOps problem was solved by heroku - 2007 Docker inn 2013 Kuberneties 2014 What is serverless? roll up two decades of infrastructure abstraction and utilize economies of scale to provide instant on-demand computation Single function, single endpoint Business need really quickly Serverless is used for: Backend APIs, Data processing Integrating 3 rd parties IoT Server- less big three: GCP, Azure, AWS Server-less Vendors: Twilio, Standard Library, PubNub Serverless is a transient name. It will probably change Achieving vendor choice in a server-less world Speaker: Server-less reduces time to market Efficiency in pricing Server-less causes vendor lock-in - Take the right tool for the job Data lock-in is what will fix you to a certain service Nordstrom: look up event router. Have your logs and then query the logs. Reminds me of streams When Serverless Gets In the Way of Scalability Speakers: Lily Li Christian Zommerfelds Serverless will scale machines over time; allows devs / engineers to focus on business logic Make a shitty software called D2L Overestimate and underestimation are dangerous pitfalls that developers face. Overestimation = high costs, underestimation = fires A scalable and resilient system must be horizontally scalable, cost efficient; resilient to traffic spikes and partial system failure; and low latency when the system scales Rate limiting saves on cash; rate limiting assumes a standard rate of request By applying max concurrency formulas Lily and Christian were able to reduce high traffic latency issues Fixed concurrency limit problems has an issue if you have multiple systems tied to the same database TCP solves the multiple system problem - carefully probes the system and adjusts the concurrency limit based on usage. Netflix applied TCP solutions and generated their own algorithm limit = limit * latencyNoLoad/latencyActual + sqrt(limit) https://github.com/Netflix/concurrency-limits https://medium.com/@NetflixTechBlog/performance-under-load-3e6fa9a60581 Concurrency limit is better than rate limiting Consider using dynamic concurrency limits Little's Law rate limit * latency = number of concurrent requests n = r * t Innovating with confidence: FaaS at Netflix Speaker: William Blankenship Introducing the platform: Metrics Logging Tracing Newt - A tool to setup all the infrastructure that SRE people want Strangler Pattern - slowly migrate between two different APIs Is there a way that we can get field by field information? Automatically change the amount of traffic based on where there is a problem - reduce the blast radius Pioneering Tax, Blast Radius \"The most important reason to consider a strangler application over a cut-over rewrite is reduced risk. A strangler can give value steadily and the frequent releases allow you to monitor its progress more carefully. Many people still don't consider a strangler since they think it will cost more - I'm not convinced about that. Since you can use shorter release cycles with a strangler you can avoid a lot of the unnecessary features that cut over rewrites often generate.\" - Martin Fowler","title":"Function18 Conference"},{"location":"Computer Science/Software Development/functions18Serverless/#function18-conference","text":"","title":"Function18 Conference"},{"location":"Computer Science/Software Development/functions18Serverless/#history-of-serverless","text":"Speaker: Keith Horwood (CEO of Stdlib) LAMP stack was how most people got started in Web programming FB used php extensively One script, one end-point This was not very scalable DHH launched rails - Twitter used rails extensively AWS in 2006 for virtualization to increase scalability Shift from IT personal to DevOps (infrastructure and hardware) DevOps problem was solved by heroku - 2007 Docker inn 2013 Kuberneties 2014 What is serverless? roll up two decades of infrastructure abstraction and utilize economies of scale to provide instant on-demand computation Single function, single endpoint Business need really quickly Serverless is used for: Backend APIs, Data processing Integrating 3 rd parties IoT Server- less big three: GCP, Azure, AWS Server-less Vendors: Twilio, Standard Library, PubNub Serverless is a transient name. It will probably change","title":"History of serverless"},{"location":"Computer Science/Software Development/functions18Serverless/#achieving-vendor-choice-in-a-server-less-world","text":"Speaker: Server-less reduces time to market Efficiency in pricing Server-less causes vendor lock-in - Take the right tool for the job Data lock-in is what will fix you to a certain service Nordstrom: look up event router. Have your logs and then query the logs. Reminds me of streams","title":"Achieving vendor choice in a server-less world"},{"location":"Computer Science/Software Development/functions18Serverless/#when-serverless-gets-in-the-way-of-scalability","text":"Speakers: Lily Li Christian Zommerfelds Serverless will scale machines over time; allows devs / engineers to focus on business logic Make a shitty software called D2L Overestimate and underestimation are dangerous pitfalls that developers face. Overestimation = high costs, underestimation = fires A scalable and resilient system must be horizontally scalable, cost efficient; resilient to traffic spikes and partial system failure; and low latency when the system scales Rate limiting saves on cash; rate limiting assumes a standard rate of request By applying max concurrency formulas Lily and Christian were able to reduce high traffic latency issues Fixed concurrency limit problems has an issue if you have multiple systems tied to the same database TCP solves the multiple system problem - carefully probes the system and adjusts the concurrency limit based on usage. Netflix applied TCP solutions and generated their own algorithm limit = limit * latencyNoLoad/latencyActual + sqrt(limit) https://github.com/Netflix/concurrency-limits https://medium.com/@NetflixTechBlog/performance-under-load-3e6fa9a60581 Concurrency limit is better than rate limiting Consider using dynamic concurrency limits Little's Law rate limit * latency = number of concurrent requests n = r * t","title":"When Serverless Gets In the Way of Scalability"},{"location":"Computer Science/Software Development/functions18Serverless/#innovating-with-confidence-faas-at-netflix","text":"Speaker: William Blankenship Introducing the platform: Metrics Logging Tracing Newt - A tool to setup all the infrastructure that SRE people want Strangler Pattern - slowly migrate between two different APIs Is there a way that we can get field by field information? Automatically change the amount of traffic based on where there is a problem - reduce the blast radius Pioneering Tax, Blast Radius \"The most important reason to consider a strangler application over a cut-over rewrite is reduced risk. A strangler can give value steadily and the frequent releases allow you to monitor its progress more carefully. Many people still don't consider a strangler since they think it will cost more - I'm not convinced about that. Since you can use shorter release cycles with a strangler you can avoid a lot of the unnecessary features that cut over rewrites often generate.\" - Martin Fowler","title":"Innovating with confidence: FaaS at Netflix"},{"location":"Computer Science/Software Development/retro/","text":"Agile Retros Ideas https://spotifylabscom.files.wordpress.com/2017/12/retro-kit3.pdf","title":"Agile Retros"},{"location":"Computer Science/Software Development/retro/#agile-retros","text":"","title":"Agile Retros"},{"location":"Computer Science/Software Development/retro/#ideas","text":"https://spotifylabscom.files.wordpress.com/2017/12/retro-kit3.pdf","title":"Ideas"},{"location":"Computer Science/Software Development/testing-software/","text":"Testing Software Testing Micro-services Traditionally, the approach was to use the Testing Pyramid An Integrated Test is a test that will pass or fail based on the correctness of another system. Sources Testing of Micro-services at Spotify","title":"Testing Software"},{"location":"Computer Science/Software Development/testing-software/#testing-software","text":"","title":"Testing Software"},{"location":"Computer Science/Software Development/testing-software/#testing-micro-services","text":"Traditionally, the approach was to use the Testing Pyramid An Integrated Test is a test that will pass or fail based on the correctness of another system.","title":"Testing Micro-services"},{"location":"Computer Science/Software Development/testing-software/#sources","text":"Testing of Micro-services at Spotify","title":"Sources"},{"location":"Recipies/waffles/","text":"Easy Waffles Start your day with fluffy and delicious waffles Duration Serving 30 mins prep 5 small waffles Ingredients 1 cup all-purpose flour, spooned and levelled 2 tablespoons sugar (last time 1 worked fine) 1 teaspoon baking powder (found in lazy Susan: Lower row) teaspoon salt 1 cup milk 2 eggs 4 tablespoons ( stick) unsalted butter, melted (454g) cup Maple syrup and butter, as desired, for serving Directions Preheat waffle iron according to manufacturer's instructions. In a large bowl, whisk flour, sugar, baking powder, and salt; set aside. In a small bowl, whisk milk and eggs; pour over flour mixture, and whisk gently to combine (don't over mix). Gently whisk in butter. Following manufacturer's instructions, cook waffles until deep brown and crisp. (For a standard waffle iron, pour a generous cup of batter into centre, spreading to within inch of edges, and close; waffle will cook in 2 to 3 minutes.) Serve warm, with maple syrup and butter, as desired. Use ladle to pour and Woden pick to pull from maker Cuisinart 5-in-1 instructions Plug the power cord into a standard electrical outlet. Turn the Selector dial to the left to choose the Griddle function. The red indicator light on the Selector dial will illuminate to signal that the power is on. Set the Griddle dial to 400\u00b0F: Allow the unit to heat up. When it has reached the selected temperature, the green indicator light will illuminate. You are now ready to begin. Lift top cover of the Griddler by grasping the handle and pushing up in one fluid motion. The top cover will stay open in a 100\u00b0 position until you lower it. Pour enough batter onto the centre of the lower waffle grid to completely cover (about 1\u00bc cups). Use a heat-proof spatula to spread batter evenly over the grid. Close the top cover. The green light will turn off, but the red light will stay illuminated. Bake for approximately 3 minutes. For lighter waffles, bake for less time. For darker waffles, bake for more time. Medium-brown waffles, can be achieved by baking in between 3\u00bd and 5 minutes. These are approximate times that may vary depending on the recipe ingredients used. Note: During operation, the green indicator light inside the Griddle dial will continue to turn on and off as the thermostat regulates the temperature. This is normal. The red indicator light inside the Selector dial will stay illuminated during operation. Remove the waffles by gently loosening the edges with a heat-proof spatula or tongs. Never use metal utensils, as they will damage the nonstick coating. When you are finished baking, turn the Selector dial to the OFF position and unplug the power cord from the wall outlet. Allow the Griddler to cool down for at least 30 minutes before handling","title":"Easy Waffles"},{"location":"Recipies/waffles/#easy-waffles","text":"Start your day with fluffy and delicious waffles Duration Serving 30 mins prep 5 small waffles","title":"Easy Waffles"},{"location":"Recipies/waffles/#ingredients","text":"1 cup all-purpose flour, spooned and levelled 2 tablespoons sugar (last time 1 worked fine) 1 teaspoon baking powder (found in lazy Susan: Lower row) teaspoon salt 1 cup milk 2 eggs 4 tablespoons ( stick) unsalted butter, melted (454g) cup Maple syrup and butter, as desired, for serving","title":"Ingredients"},{"location":"Recipies/waffles/#directions","text":"Preheat waffle iron according to manufacturer's instructions. In a large bowl, whisk flour, sugar, baking powder, and salt; set aside. In a small bowl, whisk milk and eggs; pour over flour mixture, and whisk gently to combine (don't over mix). Gently whisk in butter. Following manufacturer's instructions, cook waffles until deep brown and crisp. (For a standard waffle iron, pour a generous cup of batter into centre, spreading to within inch of edges, and close; waffle will cook in 2 to 3 minutes.) Serve warm, with maple syrup and butter, as desired. Use ladle to pour and Woden pick to pull from maker","title":"Directions"},{"location":"Recipies/waffles/#cuisinart-5-in-1-instructions","text":"Plug the power cord into a standard electrical outlet. Turn the Selector dial to the left to choose the Griddle function. The red indicator light on the Selector dial will illuminate to signal that the power is on. Set the Griddle dial to 400\u00b0F: Allow the unit to heat up. When it has reached the selected temperature, the green indicator light will illuminate. You are now ready to begin. Lift top cover of the Griddler by grasping the handle and pushing up in one fluid motion. The top cover will stay open in a 100\u00b0 position until you lower it. Pour enough batter onto the centre of the lower waffle grid to completely cover (about 1\u00bc cups). Use a heat-proof spatula to spread batter evenly over the grid. Close the top cover. The green light will turn off, but the red light will stay illuminated. Bake for approximately 3 minutes. For lighter waffles, bake for less time. For darker waffles, bake for more time. Medium-brown waffles, can be achieved by baking in between 3\u00bd and 5 minutes. These are approximate times that may vary depending on the recipe ingredients used. Note: During operation, the green indicator light inside the Griddle dial will continue to turn on and off as the thermostat regulates the temperature. This is normal. The red indicator light inside the Selector dial will stay illuminated during operation. Remove the waffles by gently loosening the edges with a heat-proof spatula or tongs. Never use metal utensils, as they will damage the nonstick coating. When you are finished baking, turn the Selector dial to the OFF position and unplug the power cord from the wall outlet. Allow the Griddler to cool down for at least 30 minutes before handling","title":"Cuisinart 5-in-1 instructions"},{"location":"Writing/blog-ideas/","text":"Blog ideas The Value of Testing Unit testing Integration Testing Randomized Testing Acceptance Testing How Javascript code runs event loop and Async and Await Password managers GraphQL A nice development experience Keybase What are functions and functional programming? How does OAuth 2.0 work? Password managers are the **** Why use password managers? Consider as an example of this a world where no-one ever locks their front door when they leave the house, and someone suggests that fitting locks and actually using them might help in dealing with the spate of burglaries that have occurred recently. This would be totally unworkable. If you lost your key you\u2019d be unable to get into your own house. Conversely, anyone who found it or stole it could now get in. For a house with multiple occupants, you\u2019d need to get a new key cut for everyone in the house, including any temporary guests who were staying for a few days. If a neighbor dropped by to return an item that they\u2019d borrowed they wouldn\u2019t be able to get in. If there was a fire then emergency services wouldn't be able to get into the house to look for people who might be trapped there. Door locks are obviously completely unworkable, and therefore not even worth trying. How frequently do you reset your passwords People have almost 100 accounts registered to a single email address More than half of all businesses in the US have experienced a cyber attack in the past year. Idiotic requirements about passwords Other useful tools - one-time access, breach alerts etc Password Schemes are dependent on the weakest link Few stolen passwords to figure it out","title":"Blog ideas"},{"location":"Writing/blog-ideas/#blog-ideas","text":"The Value of Testing Unit testing Integration Testing Randomized Testing Acceptance Testing How Javascript code runs event loop and Async and Await Password managers GraphQL A nice development experience Keybase What are functions and functional programming? How does OAuth 2.0 work? Password managers are the **** Why use password managers? Consider as an example of this a world where no-one ever locks their front door when they leave the house, and someone suggests that fitting locks and actually using them might help in dealing with the spate of burglaries that have occurred recently. This would be totally unworkable. If you lost your key you\u2019d be unable to get into your own house. Conversely, anyone who found it or stole it could now get in. For a house with multiple occupants, you\u2019d need to get a new key cut for everyone in the house, including any temporary guests who were staying for a few days. If a neighbor dropped by to return an item that they\u2019d borrowed they wouldn\u2019t be able to get in. If there was a fire then emergency services wouldn't be able to get into the house to look for people who might be trapped there. Door locks are obviously completely unworkable, and therefore not even worth trying. How frequently do you reset your passwords People have almost 100 accounts registered to a single email address More than half of all businesses in the US have experienced a cyber attack in the past year. Idiotic requirements about passwords Other useful tools - one-time access, breach alerts etc Password Schemes are dependent on the weakest link Few stolen passwords to figure it out","title":"Blog ideas"},{"location":"Writing/blogging/","text":"Blogging When people ask me for advice on blogging, I always respond with yet another form of the same advice: pick a schedule you can live with, and stick to it. Until you do that, none of the other advice I could give you will matter. I don't care if you suck at writing. I don't care if nobody reads your blog. I don't care if you have nothing interesting to say. If you can demonstrate a willingness to write, and a desire to keep continually improving your writing, you will eventually be successful. Whoever said, \u201cyou do not really understand something unless you can explain it to your grandmother\u201d never tried detailing their opinions to a text file. It's helpful to discuss features, but sometimes the value of a feature is inversely proportional to how much it has been discussed. Our job as software developers is to deliver features and solve business problems, not to generate neverending discussion. Why Blog? Blogging is something that I am irrationally scared of. The only way to overcome these fears is to step out of my comfort zone and write about things. I scower the internet for hours searching for an answer to a simple question, yet when I get the answer it doesn\u2019t stick. Want to make it easier to remember what I have just learned. I spent a ton of time and effort learning how docker works. Yet I never used that knowledge practically well enough for it to stick Want to be able to answer stupidly easy questions that I really don\u2019t do a good job answering. Why did I choose to go into CS? What courses did I take last semester? Cunningham\u2019s Law will save you when you are wrong You\u2019re holding yourself accountable to what you\u2019ve learned, working to articulate it, and helping others all along the way. Furthermore, it affords opportunities that you may not be able to get otherwise. What do I blog about? Nothing (too) wrong. I need to know enough about the topic to make the post worthwhile. How to frame things? Try to be positive, I am not a pot smoking jock in my parent\u2019s basement. This way when there is something negative to say, its credible. Write for a past version of yourself, what I wish I had someone tell me Stick to your own experiences (this worked for me vs you should do this) Don\u2019t be \u201cfalsely modest\u201d, if you know something, you know it. No need to pretend that you don't write for actual human people, not \u201ccontent\u201d for an \u201caudience\u201d I can respect that. Writing is hard. People spend their entire lives learning how to write effectively. It isn't something you can fake. It isn't something you can buy. You have to work at it. That's exactly why people who are afraid they can't write should be blogging. It's exercise. No matter how out of shape you are, if you exercise a few times a week, you'll inevitably get fitter. Write a small blog entry a few times every week and you're bound to become a better writer. If you're not writing because you're intimidated by writing, well, you're likely to stay that way forever. Sources: https://jvns.ca/blog/2018/02/20/measuring-blog-success/ https://tommcfarlin.com/programmers-should-blog/ https://blog.codinghorror.com/how-to-achieve-ultimate-blog-success-in-one-easy-step/","title":"Blogging"},{"location":"Writing/blogging/#blogging","text":"When people ask me for advice on blogging, I always respond with yet another form of the same advice: pick a schedule you can live with, and stick to it. Until you do that, none of the other advice I could give you will matter. I don't care if you suck at writing. I don't care if nobody reads your blog. I don't care if you have nothing interesting to say. If you can demonstrate a willingness to write, and a desire to keep continually improving your writing, you will eventually be successful. Whoever said, \u201cyou do not really understand something unless you can explain it to your grandmother\u201d never tried detailing their opinions to a text file. It's helpful to discuss features, but sometimes the value of a feature is inversely proportional to how much it has been discussed. Our job as software developers is to deliver features and solve business problems, not to generate neverending discussion.","title":"Blogging"},{"location":"Writing/blogging/#why-blog","text":"Blogging is something that I am irrationally scared of. The only way to overcome these fears is to step out of my comfort zone and write about things. I scower the internet for hours searching for an answer to a simple question, yet when I get the answer it doesn\u2019t stick. Want to make it easier to remember what I have just learned. I spent a ton of time and effort learning how docker works. Yet I never used that knowledge practically well enough for it to stick Want to be able to answer stupidly easy questions that I really don\u2019t do a good job answering. Why did I choose to go into CS? What courses did I take last semester? Cunningham\u2019s Law will save you when you are wrong You\u2019re holding yourself accountable to what you\u2019ve learned, working to articulate it, and helping others all along the way. Furthermore, it affords opportunities that you may not be able to get otherwise.","title":"Why Blog?"},{"location":"Writing/blogging/#what-do-i-blog-about","text":"Nothing (too) wrong. I need to know enough about the topic to make the post worthwhile. How to frame things? Try to be positive, I am not a pot smoking jock in my parent\u2019s basement. This way when there is something negative to say, its credible. Write for a past version of yourself, what I wish I had someone tell me Stick to your own experiences (this worked for me vs you should do this) Don\u2019t be \u201cfalsely modest\u201d, if you know something, you know it. No need to pretend that you don't write for actual human people, not \u201ccontent\u201d for an \u201caudience\u201d I can respect that. Writing is hard. People spend their entire lives learning how to write effectively. It isn't something you can fake. It isn't something you can buy. You have to work at it. That's exactly why people who are afraid they can't write should be blogging. It's exercise. No matter how out of shape you are, if you exercise a few times a week, you'll inevitably get fitter. Write a small blog entry a few times every week and you're bound to become a better writer. If you're not writing because you're intimidated by writing, well, you're likely to stay that way forever.","title":"What do I blog about?"},{"location":"Writing/blogging/#sources","text":"https://jvns.ca/blog/2018/02/20/measuring-blog-success/ https://tommcfarlin.com/programmers-should-blog/ https://blog.codinghorror.com/how-to-achieve-ultimate-blog-success-in-one-easy-step/","title":"Sources:"},{"location":"Writing/cold-emails/","text":"Cold Emails First thing is first ... expect a 50-60% Response Rate. Length Keep it Short: \u201cYou should explain everything that you want in first two sentences. Literally everything you truly want in first five to seven words. This makes it easy for recipient to get everything you need without wasting hours of their life. Don't Oversell: You don't want to be mistaken for Spam. That's the worst thing that can happen. Don't Sound Desperate: Sounding desperate is likely to illicite a quick response as oppose to a thoughtful one. Recipient First: Customize the Introduction:This sill make the mail seem more personal. Acknowledge that its a cold email: Everyone knows a cold email when they see it \u2014 so go out of your way to seem human and real when doing so. One way to do this is by acknowledging fact that while it may be a cold email, you genuinely care about their feedback. Make each recipient feel wanted. That way, they\u2019ll genuinely feel like their opinion means something to you, and hopefully it\u2019ll solicit a response. Don't Write a story: Their time is just as valuable, and in reality, nobody cares about the story. If they do, then they will defiantly ask. Put their first name in the subject line: \u201cWhen I put their first name in subject, I get an 83 percent open rate and a 14 percent response rate. Pretty decent compared to most cold emails. If you can Find Commonality: \u201cTry and find something you share with person you are contacting. In my case, I\u2019ve had success checking LinkedIn and seeing if they share a contact, a group, interest or are from same university. It\u2019s an easy way to build rapport and possibly get them to read rest of email.\u201d Usually better not to CC: Use BCC if you must Content: If you can't think of a good subject, use \"Appropriate Person\": It puzzles the reader and looks like a quick problem to solve. The first sentence: Should be along the lines of \u201cI am writing in hopes of talking to the appropriate person who handles (role). If you can, add value first: \u201c best way to develop strong business relationships is proactively think of ways to help others. A cold email is much more likely to catch attention of recipient if you find a way to add value to them first. You\u2019ll be amazed by how much you help yourself by first thinking of ways to help others.\u201d Ask a question: \u201cNot getting responses from a cold email? Try including a question that highlights your knowledge of recipient\u2019s company and requests a response. This will make email more personal and initiates engagement in conversation. You can try asking if company is interested in investing time in a new business tactic, and then invite them to reply to get more information about your offerings.\u201d Propose a time/method of response: \u201cIt is much easier for me to set up a time to speak with someone when they propose a time frame that they are free to talk. It eliminates back and forth on setting a time that works for both parties. Example: I am free tomorrow between 3:00 p.m. and 6:00 p.m. EST. Please let me know when you are free within that time frame to go over our new service.\u201d Show that you can solve a problem: \u201cBesides sounding human and being personal, email should quickly address a problem and how we can help solve it. email shouldn\u2019t make recipient connect dots \u2014 it should make it easy for them to see value in whatever is being presented. If recipient sees how further communication would make life easier for them, they\u2019ll want to respond.\" Start the follow-up with thank you: Remember, they didn't have to respond Sources http://smallbiztrends.com/2015/03/cold-emailing-tips.html http://www.breakthroughemail.com/coldemailtemplate.pdf","title":"Cold Emails"},{"location":"Writing/cold-emails/#cold-emails","text":"First thing is first ... expect a 50-60% Response Rate.","title":"Cold Emails"},{"location":"Writing/cold-emails/#length","text":"Keep it Short: \u201cYou should explain everything that you want in first two sentences. Literally everything you truly want in first five to seven words. This makes it easy for recipient to get everything you need without wasting hours of their life. Don't Oversell: You don't want to be mistaken for Spam. That's the worst thing that can happen. Don't Sound Desperate: Sounding desperate is likely to illicite a quick response as oppose to a thoughtful one.","title":"Length"},{"location":"Writing/cold-emails/#recipient-first","text":"Customize the Introduction:This sill make the mail seem more personal. Acknowledge that its a cold email: Everyone knows a cold email when they see it \u2014 so go out of your way to seem human and real when doing so. One way to do this is by acknowledging fact that while it may be a cold email, you genuinely care about their feedback. Make each recipient feel wanted. That way, they\u2019ll genuinely feel like their opinion means something to you, and hopefully it\u2019ll solicit a response. Don't Write a story: Their time is just as valuable, and in reality, nobody cares about the story. If they do, then they will defiantly ask. Put their first name in the subject line: \u201cWhen I put their first name in subject, I get an 83 percent open rate and a 14 percent response rate. Pretty decent compared to most cold emails. If you can Find Commonality: \u201cTry and find something you share with person you are contacting. In my case, I\u2019ve had success checking LinkedIn and seeing if they share a contact, a group, interest or are from same university. It\u2019s an easy way to build rapport and possibly get them to read rest of email.\u201d Usually better not to CC: Use BCC if you must","title":"Recipient First:"},{"location":"Writing/cold-emails/#content","text":"If you can't think of a good subject, use \"Appropriate Person\": It puzzles the reader and looks like a quick problem to solve. The first sentence: Should be along the lines of \u201cI am writing in hopes of talking to the appropriate person who handles (role). If you can, add value first: \u201c best way to develop strong business relationships is proactively think of ways to help others. A cold email is much more likely to catch attention of recipient if you find a way to add value to them first. You\u2019ll be amazed by how much you help yourself by first thinking of ways to help others.\u201d Ask a question: \u201cNot getting responses from a cold email? Try including a question that highlights your knowledge of recipient\u2019s company and requests a response. This will make email more personal and initiates engagement in conversation. You can try asking if company is interested in investing time in a new business tactic, and then invite them to reply to get more information about your offerings.\u201d Propose a time/method of response: \u201cIt is much easier for me to set up a time to speak with someone when they propose a time frame that they are free to talk. It eliminates back and forth on setting a time that works for both parties. Example: I am free tomorrow between 3:00 p.m. and 6:00 p.m. EST. Please let me know when you are free within that time frame to go over our new service.\u201d Show that you can solve a problem: \u201cBesides sounding human and being personal, email should quickly address a problem and how we can help solve it. email shouldn\u2019t make recipient connect dots \u2014 it should make it easy for them to see value in whatever is being presented. If recipient sees how further communication would make life easier for them, they\u2019ll want to respond.\" Start the follow-up with thank you: Remember, they didn't have to respond","title":"Content:"},{"location":"Writing/cold-emails/#sources","text":"http://smallbiztrends.com/2015/03/cold-emailing-tips.html http://www.breakthroughemail.com/coldemailtemplate.pdf","title":"Sources"},{"location":"Writing/coverletters/","text":"The first thing a potential employer sees in your job application is the cover letter. Cover letters are a graceful way to introduce yourself, to convey your personality and to impress a hiring manager with your experience and your writing skills Your cover letter should be short \u2014 generally no longer than three or four paragraphs, said Debra Wheatman, a career expert at Vault, a jobs Web site. You can also highlight qualities you possess that may not fit the confines of a r\u00e9sum\u00e9, Ms. Wheatman said You can include your letter in the actual text of your e-mail message or place it above your r\u00e9sum\u00e9 in an attachment. If you put it in a separate attachment from your r\u00e9sum\u00e9, you run the risk that a harried hiring manager will not click on it at all. If you place it in the text of your e-mail message, it should generally be shorter than if you use an attachment, Ms. Enelow said. How to start: First, do your best to find the decision maker\u2019s name, and use it in the salutation. If you are applying to a blind ad, say \u201cDear Sir or Madam\u201d or \u201cTo the Hiring Manager.\u201d In your first paragraph, explain why you are writing \u2014 it may be that you are answering an ad, that you were referred to the company through networking, or that you learned that the company is expanding, said Wendy S. Enelow, author of \u201cCover Letter Magic\u201d and a professional r\u00e9sum\u00e9 writer in Virginia Content: Anything being sent to a decision-maker should sell you, and not just state facts. Keep track of how many times you use the words \"I\" and/or \"my\". After you write the letter, take a pen and circle all the I's and my's in the letter: more than five? Time to re-write some of the sentences. Here's an illustration of how to do that: instead of writing \"I am looking for an opportunity for advancement with a new employer. My background is in retail management and I feel well-qualified for the Store Manager position with your company\" you can write, \"A background in retail management and proven record of obtaining results as a Store Manager are key elements in qualifying me for consideration as part of your team.\" I like to use in cover letters is to pull out the top 4 or 5 achievements and mention them in bullet form with the letter What not to do: Another misguided thing people do is to make the cover letter all about them: \u201cI did this, I\u2019m looking for, I want to ... I, I, I.\u201d Structure your letter so that it stresses the company and what you can do to help it reach its goals, Ms. Piotrowski and others said. Another danger is including too much information \u2014 for example, very specific salary or geographic requirements, Ms. Enelow said. It is also unwise to point out that you do not meet all the criteria in the job description, she said. You can deal with that later, if you get an interview Remember the PURPOSE of the cover letter: to highlight your background in the right light, sell your skills, and show the potential employer you are worthy of an interview. Explaining what you WANT throughout the letter doesn't tell the reader the BENEFIT of what you can offer, which is imperative for you to be successful. Since the cover letter is designed to market you to potential employers, don't state the obvious. If the cover letter does not create a sense of excitement and entice the reader, it is a waste of your time for writing it and a waste of time for the reader reading it. Sources http://careers.socialworkers.org/findajob/articles/coverletter.asp http://www.theguardian.com/careers/covering-letter-examples http://www.nytimes.com/2009/02/15/jobs/15career.html https://stackoverflow.blog/2016/11/11/developer-cover-letter/","title":"Coverletters"},{"location":"Writing/documentation/","text":"Documentation How vs Why Documentation that describes how to do something goes stale quickly. Documentation that describes why something was implemented a certain way usually lasts much longer.","title":"Documentation"},{"location":"Writing/documentation/#documentation","text":"How vs Why Documentation that describes how to do something goes stale quickly. Documentation that describes why something was implemented a certain way usually lasts much longer.","title":"Documentation"},{"location":"Writing/email/","text":"Emailing Advice Aim(s): Determine your Desired outcome: There are typically 4 types of emails.The clearer your intention, the more focused you will be, the better you can cater email for the intended result, the more likely you will get your desired outcome. Which type of email are you sending? What is your desired outcome? Self Fulfilling Email The email itself is the point. You want to tell the receiver something, either a compliment or information. No reply is necessary. Inquiries You need something from the receiver in the form of a reply. For example, advice, or questions answered. The reply is your desired outcome. Open-Ended Dialog to keep communication lines open, for the purpose of some future result or benefit. Action Emails The goal is not the reply, but some action on the part of the receiver. For example, a sales pitch, or asking for a website link exchange. Quick Answers: If the email is to ask \"What's the point?\", then cut the crap and be concise. State it clearly using minimal words. If action is needed, make it clear what the desired action is from the recipient. And if no action or reply is expected, say that! \u201cNo reply necessary.\u201d It\u2019ll be like music to their ears. Place actions at the top: If there are things that the recipient must do, place them up top instead of burying them in the body. Many email clients give a preview of the top part of the message, so these are likely to be seen. Sort these points by priority Make it Easy to Be Found: In your signature, include appropriate URLs for your website, blog, portfolio or product. Make sure the links are functional so they can read more about you in one-click. Make your concluding phrase and signature context-appropriate. Don\u2019t sound presumptuous. Many people are busy and important (and everybody thinks they are). If you are asking for anything requiring time or energy, it is courteous to be demure. Use Simple English: When the writing is too formal or uses irrelevant technical lingo, it is difficult for laymen to understand. Plus, you come off sounding like a legal document or spammer. Neither is good. Don't ask open-ended questions Be reasonable and thoughtful when asking. Don\u2019t expect the recipient to solve all our life problems. For example, \u201cHow can I get rich quick? How can I become successful?\u201d are too broad. Break them down into specifics and ask the one question that really matte Be Concise: ONLY SEND AN EMAIL IF THERE IS NO OTHER Simpler MEANS OF GETTING THE ANSWER. State Benefits Clearly: Its like a sales pitch. You have to get the point across.Also, make sure the incentives are realistic, the exchange is fair, and there truly are benefits to the receiver. Do your homework before contacting someone. Put yourself in their shoes, \u201cWould you act on the offer?\u201d Example, emailing a high profile website like lifehackerfor a link exchange is not a fair exchange. It\u2019s called spam. If they don\u2019t display links to other sites, likely they won\u2019t display your. Keep it Simple: Long email = I don't respect your time. People don't care about the story, they care only about the facts. Unless asked, you don\u2019t need to overly elaborate anything. Simply stick to the facts \u2013 it\u2019ll help you keep your message short. Email is not mail in electronic form, it is a formalized text message: When we are on mobile devices like the blackberry or our cell phones, we lack the fluidity of the computer keyboard, and as such, we get to the point really fast. Now, pretend you\u2019re on a mobile device, what would your message be now Minimize Questions: Ask questions that matter, and limit the number of questions and favors you ask in an email (one or two max). The more questions (especially open-ended ones) asked in one sitting, the less likely you are to get a response, and the less likely all your questions will be answered. Trimming of Words: Like grooming a garden, read through the finished email and trim out words, sentences, and paragraphs that do not contribute towards your desired result. Check for potential ambiguities and unclear thinking. Can you rephrase sentences for clarity using fewer words? Check for excess commentary that doesn\u2019t add to the email\u2019s main point. Remove extra details disclosed, unnecessarily. The Subject Line: Concise as hell A subject should be informative, and about 50 characters or less. If the entire email fits in the subject, put it in the subject. If you think that's rude, it's not. If you insist that it's rude, put \"Thanks!\" in the body.If the email doesn't fit in the subject, the subject should contain the most critical details, such as the date, time and location of a meeting, or the top action item and deadline. Mention the Subject: More common problem then expected. If the email fits in the subject, it takes a click out of processing it, and raises the probability of a reply. (If the recipient gets hundreds of emails per day, clicks add up.) The Introduction: Use the appropriate Greeting: Start with a greeting. The first line of your email should be a greeting, followed by an empty line and then your message body. Launching straight into the message is bad, but \u201cHi!\u201d is poor form and \u201cHey Prof!\u201d is an unmitigated disaster. \u201cDear\u201d and \u201cHi\u201d are fine, so long as you follow both by a name or title: \u201cHi Professor\u201d or \u201cHi Mr. ____\u201d. Address People Properly: I could care less if strangers address me as Mr., Dr. or Prof. Blattman. Few of my colleagues seem to feel the same way. Sadly your approach must conform to the average (or even greatest common) ego. If you\u2019re not sure if the person is a Dr. or not, three seconds on Google should tell you. Pretend Face-to-face Intro: If you just met someone new at a party, would you open your mouth first and give them a rambling story about your life? Probably not. Typically, we close our mouth after a quick intro. In email, stopping talking is equivalent to hitting the send button.Treating email introductions as if you are meeting them in person is another trick to keeping messages short. Avoid Excessive Compliments:Compliment only if you really mean it. And remember to be brief if you need action from the receiver. There is a difference between being genuine and saying what\u2019s on your heart, and going out of your way to compliment someone. We humans are exceptional at detecting unauthentic phrasings and remarks \u2013 even in email Be Personal and Personable: Personalize email with relevant remarks to the receiver, put in a quick comment about their site, product or work. Address the person by name, sign email with your own name, and a friendly comment like \u201cEnjoy your weekend!\u201d The Presentation: Formatting Matters:Make emails easy to read and quick to scan by using bullet points, numbered lists, and keeping paragraphs short. Highlight keywords (bold or italic) for emphasis, without overdoing it. Font Matters: There is nothing worse than opening an email and become blinded by the brightness elicited by all the words displaying in bold. It makes me want to instantly close the email for the sake of protecting my eyes. Alternatively, fonts that are too small, too large, or otherwise hard to read (ie. 8 point, times roman font, all bold.) makes us not want to read the email as well. Manners Don't forget to add \"Please\" or \"Thank you\" when and where appropriate. A \"Thanks!\" often comes off as more sincere than \"Sincerely.\" Organization Multiple Emails: If you're emailing the same person about several distinct topics, it is usually a good idea to split the email apart into individually processable emails. Death to the emoticon. Keep them for your friends. And recall that, for centuries of the printed word, writers managed to convey sarcastic and funny without the semicolon and parenthesis. If you think your comment needs an emoticon, this is a sign you need to rewrite (or delete) the remark. Reply to Points, not paragraphs: Paragraphs work well for essays not emails. This increases readability. Put a blank line after every point, which usually means after every independent thought, and certainly after every question. In short, shape the text to indicate the structure of your message. Strategic whitespace makes a document less threatening to a reader. Large blocks of text short-circuit reader attention. When to use paragraphs: Feel free to reply on top if your reply is a single point, and not addressed to any specific part. If you only want to address part of a message, delete any part not relevant to what you're responding to. If you must write a longer email, separate out the gory details from the summary Add people that are relevant: Two ears are better than one. Final Statement: The final sentence - Either provide something concrete to reply to or make it clear that a reply is not necessary. If you do not expect a reply and merely want to share some information with your recipient, then simply summarize the information in the final sentence (e.g., \"I look forward to seeing you tomorrow at 1pm in my office.\") If you must resend an email do so apologetically: If you've emailed someone and he/she hasn't responded in a reasonable amount of time, then it might be appropriate to re-send your original message as a gentle reminder. The worst thing to do is to pester an already-busy person by re-sending your email with a note like \"Have you had time to address my email yet? If not, here it is again.\" Even if worded politely, it still comes off as, I'm important and worthy of your attention, and you haven't given it to me yet, but you should! Sources Effective Email Writing Quora http://matt.might.net/articles/how-to-email/ http://www.pgbovine.net/email-tips.htm http://chrisblattman.com/2010/11/08/students-how-to-email-to-your-professor-employer-and-professional-peers/","title":"Emailing Advice"},{"location":"Writing/email/#emailing-advice","text":"Aim(s): Determine your Desired outcome: There are typically 4 types of emails.The clearer your intention, the more focused you will be, the better you can cater email for the intended result, the more likely you will get your desired outcome. Which type of email are you sending? What is your desired outcome? Self Fulfilling Email The email itself is the point. You want to tell the receiver something, either a compliment or information. No reply is necessary. Inquiries You need something from the receiver in the form of a reply. For example, advice, or questions answered. The reply is your desired outcome. Open-Ended Dialog to keep communication lines open, for the purpose of some future result or benefit. Action Emails The goal is not the reply, but some action on the part of the receiver. For example, a sales pitch, or asking for a website link exchange. Quick Answers: If the email is to ask \"What's the point?\", then cut the crap and be concise. State it clearly using minimal words. If action is needed, make it clear what the desired action is from the recipient. And if no action or reply is expected, say that! \u201cNo reply necessary.\u201d It\u2019ll be like music to their ears. Place actions at the top: If there are things that the recipient must do, place them up top instead of burying them in the body. Many email clients give a preview of the top part of the message, so these are likely to be seen. Sort these points by priority Make it Easy to Be Found: In your signature, include appropriate URLs for your website, blog, portfolio or product. Make sure the links are functional so they can read more about you in one-click. Make your concluding phrase and signature context-appropriate. Don\u2019t sound presumptuous. Many people are busy and important (and everybody thinks they are). If you are asking for anything requiring time or energy, it is courteous to be demure. Use Simple English: When the writing is too formal or uses irrelevant technical lingo, it is difficult for laymen to understand. Plus, you come off sounding like a legal document or spammer. Neither is good. Don't ask open-ended questions Be reasonable and thoughtful when asking. Don\u2019t expect the recipient to solve all our life problems. For example, \u201cHow can I get rich quick? How can I become successful?\u201d are too broad. Break them down into specifics and ask the one question that really matte Be Concise: ONLY SEND AN EMAIL IF THERE IS NO OTHER Simpler MEANS OF GETTING THE ANSWER. State Benefits Clearly: Its like a sales pitch. You have to get the point across.Also, make sure the incentives are realistic, the exchange is fair, and there truly are benefits to the receiver. Do your homework before contacting someone. Put yourself in their shoes, \u201cWould you act on the offer?\u201d Example, emailing a high profile website like lifehackerfor a link exchange is not a fair exchange. It\u2019s called spam. If they don\u2019t display links to other sites, likely they won\u2019t display your. Keep it Simple: Long email = I don't respect your time. People don't care about the story, they care only about the facts. Unless asked, you don\u2019t need to overly elaborate anything. Simply stick to the facts \u2013 it\u2019ll help you keep your message short. Email is not mail in electronic form, it is a formalized text message: When we are on mobile devices like the blackberry or our cell phones, we lack the fluidity of the computer keyboard, and as such, we get to the point really fast. Now, pretend you\u2019re on a mobile device, what would your message be now Minimize Questions: Ask questions that matter, and limit the number of questions and favors you ask in an email (one or two max). The more questions (especially open-ended ones) asked in one sitting, the less likely you are to get a response, and the less likely all your questions will be answered. Trimming of Words: Like grooming a garden, read through the finished email and trim out words, sentences, and paragraphs that do not contribute towards your desired result. Check for potential ambiguities and unclear thinking. Can you rephrase sentences for clarity using fewer words? Check for excess commentary that doesn\u2019t add to the email\u2019s main point. Remove extra details disclosed, unnecessarily. The Subject Line: Concise as hell A subject should be informative, and about 50 characters or less. If the entire email fits in the subject, put it in the subject. If you think that's rude, it's not. If you insist that it's rude, put \"Thanks!\" in the body.If the email doesn't fit in the subject, the subject should contain the most critical details, such as the date, time and location of a meeting, or the top action item and deadline. Mention the Subject: More common problem then expected. If the email fits in the subject, it takes a click out of processing it, and raises the probability of a reply. (If the recipient gets hundreds of emails per day, clicks add up.) The Introduction: Use the appropriate Greeting: Start with a greeting. The first line of your email should be a greeting, followed by an empty line and then your message body. Launching straight into the message is bad, but \u201cHi!\u201d is poor form and \u201cHey Prof!\u201d is an unmitigated disaster. \u201cDear\u201d and \u201cHi\u201d are fine, so long as you follow both by a name or title: \u201cHi Professor\u201d or \u201cHi Mr. ____\u201d. Address People Properly: I could care less if strangers address me as Mr., Dr. or Prof. Blattman. Few of my colleagues seem to feel the same way. Sadly your approach must conform to the average (or even greatest common) ego. If you\u2019re not sure if the person is a Dr. or not, three seconds on Google should tell you. Pretend Face-to-face Intro: If you just met someone new at a party, would you open your mouth first and give them a rambling story about your life? Probably not. Typically, we close our mouth after a quick intro. In email, stopping talking is equivalent to hitting the send button.Treating email introductions as if you are meeting them in person is another trick to keeping messages short. Avoid Excessive Compliments:Compliment only if you really mean it. And remember to be brief if you need action from the receiver. There is a difference between being genuine and saying what\u2019s on your heart, and going out of your way to compliment someone. We humans are exceptional at detecting unauthentic phrasings and remarks \u2013 even in email Be Personal and Personable: Personalize email with relevant remarks to the receiver, put in a quick comment about their site, product or work. Address the person by name, sign email with your own name, and a friendly comment like \u201cEnjoy your weekend!\u201d The Presentation: Formatting Matters:Make emails easy to read and quick to scan by using bullet points, numbered lists, and keeping paragraphs short. Highlight keywords (bold or italic) for emphasis, without overdoing it. Font Matters: There is nothing worse than opening an email and become blinded by the brightness elicited by all the words displaying in bold. It makes me want to instantly close the email for the sake of protecting my eyes. Alternatively, fonts that are too small, too large, or otherwise hard to read (ie. 8 point, times roman font, all bold.) makes us not want to read the email as well. Manners Don't forget to add \"Please\" or \"Thank you\" when and where appropriate. A \"Thanks!\" often comes off as more sincere than \"Sincerely.\" Organization Multiple Emails: If you're emailing the same person about several distinct topics, it is usually a good idea to split the email apart into individually processable emails. Death to the emoticon. Keep them for your friends. And recall that, for centuries of the printed word, writers managed to convey sarcastic and funny without the semicolon and parenthesis. If you think your comment needs an emoticon, this is a sign you need to rewrite (or delete) the remark. Reply to Points, not paragraphs: Paragraphs work well for essays not emails. This increases readability. Put a blank line after every point, which usually means after every independent thought, and certainly after every question. In short, shape the text to indicate the structure of your message. Strategic whitespace makes a document less threatening to a reader. Large blocks of text short-circuit reader attention. When to use paragraphs: Feel free to reply on top if your reply is a single point, and not addressed to any specific part. If you only want to address part of a message, delete any part not relevant to what you're responding to. If you must write a longer email, separate out the gory details from the summary Add people that are relevant: Two ears are better than one. Final Statement: The final sentence - Either provide something concrete to reply to or make it clear that a reply is not necessary. If you do not expect a reply and merely want to share some information with your recipient, then simply summarize the information in the final sentence (e.g., \"I look forward to seeing you tomorrow at 1pm in my office.\") If you must resend an email do so apologetically: If you've emailed someone and he/she hasn't responded in a reasonable amount of time, then it might be appropriate to re-send your original message as a gentle reminder. The worst thing to do is to pester an already-busy person by re-sending your email with a note like \"Have you had time to address my email yet? If not, here it is again.\" Even if worded politely, it still comes off as, I'm important and worthy of your attention, and you haven't given it to me yet, but you should! Sources Effective Email Writing Quora http://matt.might.net/articles/how-to-email/ http://www.pgbovine.net/email-tips.htm http://chrisblattman.com/2010/11/08/students-how-to-email-to-your-professor-employer-and-professional-peers/","title":"Emailing Advice"},{"location":"Writing/functional-specs/","text":"Writing Technical Specifications A functional spec describes the product from the user's perspective. Writing a spec is a great way to nail down all those irritating design decisions, large and small, that get covered up if you don\u2019t have a spec. So. Specs are good, but not if nobody reads them. As a spec-writer, you have to trick people into reading your stuff, and you should also probably make an effort not to cause any already-too-small brains to leak out through eye-sockets. What specs should include. A disclaimer One author Scenarios An overview details, details, details Open issues Non-goals: requested stuff that we have decided not to do/use with good reason Side Notes (Technical Notes/Documentation Notes/Testing Notes) Qualities of well written specs Release a copy once a week, unless there is a huge change Be funny Writing a spec is like writing code for a brain to execute Write as simply as possible Review and reread several times Templates considered harmful","title":"Writing Technical Specifications"},{"location":"Writing/functional-specs/#writing-technical-specifications","text":"A functional spec describes the product from the user's perspective. Writing a spec is a great way to nail down all those irritating design decisions, large and small, that get covered up if you don\u2019t have a spec. So. Specs are good, but not if nobody reads them. As a spec-writer, you have to trick people into reading your stuff, and you should also probably make an effort not to cause any already-too-small brains to leak out through eye-sockets.","title":"Writing Technical Specifications"},{"location":"Writing/functional-specs/#what-specs-should-include","text":"A disclaimer One author Scenarios An overview details, details, details Open issues Non-goals: requested stuff that we have decided not to do/use with good reason Side Notes (Technical Notes/Documentation Notes/Testing Notes)","title":"What specs should include."},{"location":"Writing/functional-specs/#qualities-of-well-written-specs","text":"Release a copy once a week, unless there is a huge change Be funny Writing a spec is like writing code for a brain to execute Write as simply as possible Review and reread several times Templates considered harmful","title":"Qualities of well written specs"},{"location":"Writing/philosophy-papers/","text":"Writing in philosophy Common Mistakes when reading philosophy: reading texts as if they are novels or technical writings prejudging the author failing to evaluate what you read trying to skim not reading actively Avoid exaggerations Don't provide context, thats a waste of space Write out your main points over and over again Thesis should be no longer than a sentence 1 sentence thesis 2 for outline then summery then objection then why that objecting is good or bad read your work out loud If things are awkward to say, they are awkward to read, if they are awkward to read then its probably not convincing Avoid Conformation bias: Convince yourself that the argument you are trying to support is correct, otherwise it will be hard to objectivity tackle the objections","title":"Writing in philosophy"},{"location":"Writing/philosophy-papers/#writing-in-philosophy","text":"Common Mistakes when reading philosophy: reading texts as if they are novels or technical writings prejudging the author failing to evaluate what you read trying to skim not reading actively Avoid exaggerations Don't provide context, thats a waste of space Write out your main points over and over again Thesis should be no longer than a sentence 1 sentence thesis 2 for outline then summery then objection then why that objecting is good or bad read your work out loud If things are awkward to say, they are awkward to read, if they are awkward to read then its probably not convincing Avoid Conformation bias: Convince yourself that the argument you are trying to support is correct, otherwise it will be hard to objectivity tackle the objections","title":"Writing in philosophy"},{"location":"Writing/resume-advice/","text":"Resume Advice The number one best way to get someone to look at your resume closely: come across as a human being, not a list of jobs and programming languages. Tell me a little story. \u201cI\u2019ve spent the last three weeks looking for a job at a real software company, but all I can find are cheezy web design shops looking for slave labor.\u201d Or, \u201cWe yanked our son out of high school and brought him to Virginia. I am not going to move again until he is out of high school, even if I have to go work at Radio Shack or become a Wal*Mart greeter.\u201d (These are slightly modified quotes from two real people.)","title":"Resume advice"},{"location":"Writing/resume-advice/#resume-advice","text":"The number one best way to get someone to look at your resume closely: come across as a human being, not a list of jobs and programming languages. Tell me a little story. \u201cI\u2019ve spent the last three weeks looking for a job at a real software company, but all I can find are cheezy web design shops looking for slave labor.\u201d Or, \u201cWe yanked our son out of high school and brought him to Virginia. I am not going to move again until he is out of high school, even if I have to go work at Radio Shack or become a Wal*Mart greeter.\u201d (These are slightly modified quotes from two real people.)","title":"Resume Advice"},{"location":"Writing/scientific-reports/","text":"Title Page Include name, date performed, location, company/class, instructor/partners Title = Brief, no more than 10 - 12 words avoid redundancy in the title Not to Flashy, Readable Abstract / Summary Brief and comprehensive Should be written Last Introduction/Purpose/Question Describe what you will be studying Provide some context Assume the reader knows nothing about your field or study While referring to outside sources, still make it seem like your work is original I would like to investigate... Hypothesis Hypothesis should be testable. If you are stuck remember that stool samples are a great way to measure stuff A hypothesis is never proven it is tested Structure If...then...because structure always good My hypothesis is... The Null Hypothesis is ... Materials / Equipment Description of Materials and Equipment involved Also Important to note anything with respect to experimental setup Should be testing the hypothesis Sometimes diagrams that show the setup are useful The more specific the better Make sure to mention the quantity of each item Method /Procedure Steps are in order that they were performed Be very specific, but keep the details relevant to the study Start each step with a verb Use Enumeration (1. 2. 3.) The first step is ... The second step is ... The third step is ... Variables and how they will be manipulated Dependent Variable and describe how to measure it Results/ Observations Include the uncertainties Observations should be in order Include Graphs/Tables to show the data visually Label the Graphs and Figures properly Talk about each trial separately in detail Discussions/ Analysis Address these questions indirectly: Do the results reflect the objective of the experiment? Do the results agree with previous findings? What are some sources of error? Did the study accomplish what you hoped to accomplish? Think Critically about the work that you performed. Conclusions Just the overall take away How does it relate to the field of study. Writing Style: Should be clear and concise Make sure everything is in the right place. Sources http://www.amazon.ca/Making-Sense-Students-Research-Writing/dp/0195445813 BIO120 Lab Manual","title":"Title Page"},{"location":"Writing/scientific-reports/#title-page","text":"Include name, date performed, location, company/class, instructor/partners Title = Brief, no more than 10 - 12 words avoid redundancy in the title Not to Flashy, Readable","title":"Title Page"},{"location":"Writing/scientific-reports/#abstract-summary","text":"Brief and comprehensive Should be written Last","title":"Abstract / Summary"},{"location":"Writing/scientific-reports/#introductionpurposequestion","text":"Describe what you will be studying Provide some context Assume the reader knows nothing about your field or study While referring to outside sources, still make it seem like your work is original I would like to investigate...","title":"Introduction/Purpose/Question"},{"location":"Writing/scientific-reports/#hypothesis","text":"Hypothesis should be testable. If you are stuck remember that stool samples are a great way to measure stuff A hypothesis is never proven it is tested Structure If...then...because structure always good My hypothesis is... The Null Hypothesis is ...","title":"Hypothesis"},{"location":"Writing/scientific-reports/#materials-equipment","text":"Description of Materials and Equipment involved Also Important to note anything with respect to experimental setup Should be testing the hypothesis Sometimes diagrams that show the setup are useful The more specific the better Make sure to mention the quantity of each item","title":"Materials / Equipment"},{"location":"Writing/scientific-reports/#method-procedure","text":"Steps are in order that they were performed Be very specific, but keep the details relevant to the study Start each step with a verb Use Enumeration (1. 2. 3.) The first step is ... The second step is ... The third step is ... Variables and how they will be manipulated Dependent Variable and describe how to measure it","title":"Method /Procedure"},{"location":"Writing/scientific-reports/#results-observations","text":"Include the uncertainties Observations should be in order Include Graphs/Tables to show the data visually Label the Graphs and Figures properly Talk about each trial separately in detail","title":"Results/ Observations"},{"location":"Writing/scientific-reports/#discussions-analysis","text":"Address these questions indirectly: Do the results reflect the objective of the experiment? Do the results agree with previous findings? What are some sources of error? Did the study accomplish what you hoped to accomplish? Think Critically about the work that you performed.","title":"Discussions/ Analysis"},{"location":"Writing/scientific-reports/#conclusions","text":"Just the overall take away How does it relate to the field of study. Writing Style: Should be clear and concise Make sure everything is in the right place. Sources http://www.amazon.ca/Making-Sense-Students-Research-Writing/dp/0195445813 BIO120 Lab Manual","title":"Conclusions"},{"location":"Writing/summary-writing/","text":"Summary Writing When writing a summary, every word should add significant meaning to the statement. Good summaries are generally not more than 250 words (1 page) Do's: Use words that convey specific meanings Only summarize after reading/writing the document Remember what you want the reader to know/think Stress important findings take advantage of conventional structure (past, present future), (purpose, method, results, conclusion)(context, definition, option, recommendation)(context, considerations, needs, implementation) Don'ts: Write a fancy introduction write generic statements Include references to other works Sources http://www.amazon.ca/Making-Sense-Students-Research-Writing/dp/0195445813","title":"Summary Writing"},{"location":"Writing/summary-writing/#summary-writing","text":"When writing a summary, every word should add significant meaning to the statement. Good summaries are generally not more than 250 words (1 page)","title":"Summary Writing"},{"location":"Writing/summary-writing/#dos","text":"Use words that convey specific meanings Only summarize after reading/writing the document Remember what you want the reader to know/think Stress important findings take advantage of conventional structure (past, present future), (purpose, method, results, conclusion)(context, definition, option, recommendation)(context, considerations, needs, implementation)","title":"Do's:"},{"location":"Writing/summary-writing/#donts","text":"Write a fancy introduction write generic statements Include references to other works","title":"Don'ts:"},{"location":"Writing/summary-writing/#sources","text":"http://www.amazon.ca/Making-Sense-Students-Research-Writing/dp/0195445813","title":"Sources"},{"location":"private/passwords/","text":"Passwords Few years ago, when password managers came out, I didn't trust them. I thought they were a fool's errend. Just the thought of storing all your poasswords one the Internet in the same location seems like a recipe for a disaster. How in the world can it be a good idea to store all your passwords one the internet in the same location? Up until now, I would have a stratergy for generating effective passwords. What I thought they were. What makes a good password. Why does it matter Why all the alternatives suck. What they actually are. Future of password management. 'Weakest Link' 80% of security breaches involve weak passwords Have I been pnwd In just the United States alone, more than 15.4 million victims identity fraud victims in 2016. Passwords are the \u2018de facto\u2019 safety measure for most sites. Unique, strong, regularly updated passwords 44% of consumers changed their password less than once a year Over 35% of americans reuse their passwords Brute force password cracking - it takes roughly 15 mins to break a password that is 8 characters long. Hence the reccomended length of a password is 10-12 characters.","title":"Passwords"},{"location":"private/passwords/#passwords","text":"Few years ago, when password managers came out, I didn't trust them. I thought they were a fool's errend. Just the thought of storing all your poasswords one the Internet in the same location seems like a recipe for a disaster. How in the world can it be a good idea to store all your passwords one the internet in the same location? Up until now, I would have a stratergy for generating effective passwords. What I thought they were. What makes a good password. Why does it matter Why all the alternatives suck. What they actually are. Future of password management. 'Weakest Link' 80% of security breaches involve weak passwords Have I been pnwd In just the United States alone, more than 15.4 million victims identity fraud victims in 2016. Passwords are the \u2018de facto\u2019 safety measure for most sites. Unique, strong, regularly updated passwords 44% of consumers changed their password less than once a year Over 35% of americans reuse their passwords Brute force password cracking - it takes roughly 15 mins to break a password that is 8 characters long. Hence the reccomended length of a password is 10-12 characters.","title":"Passwords"},{"location":"private/reminders/","text":"Reminders Honda Insurance Rhumba battering UofT Library Books Pay Bills Check amazon for price of Lip Gel Next Year May: Dependant Scholarship","title":"Reminders"},{"location":"private/reminders/#reminders","text":"Honda Insurance Rhumba battering UofT Library Books Pay Bills Check amazon for price of Lip Gel","title":"Reminders"},{"location":"private/reminders/#next-year","text":"May: Dependant Scholarship","title":"Next Year"},{"location":"private/spicy-questions/","text":"","title":"Spicy questions"}]}